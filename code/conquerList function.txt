conquerList <- function(x, naming = NULL) {
  # If x is not a list or is a data frame, return x as is
  if (!is.list(x) | is.data.frame(x)) {
    return(x)
  }
  
  s1 <- length(x)
  s2 <- length(x[[1]])
  u1 <- unlist(x, recursive = FALSE)
  
  # Ensure the length of the unlisted elements matches the expected size
  stopifnot(length(u1) == s1 * s2)
  
  # Check if the first element of x is a data frame with a single row
  if (is.data.frame(x[[1]])) {
    single.row <- nrow(x[[1]]) == 1L
  } else {
    single.row <- FALSE
  }
  
  # If each element of the list x contains a row of a data frame, return combined data frame
  if (single.row & is.list(x)) {
    return(cbind(naming, ldply(x)))
  }
  
  # Initialize a list to store the results
  cqd <- vector("list", s2)
  
  # Loop through each column of the first element of x
  for (i in 1:s2) {
    # Generate a sequence of indices for the i-th column across all elements of x
    ti <- seq(i, s1 * s2, s2)
    tl <- vector("list", s1)
    
    # Extract the i-th column from each element of x
    for (j in 1:s1) {
      tl[[j]] <- u1[[ti[j]]]
    }
    
    # Combine the extracted columns into a data frame or list
    if (is.data.frame(tl[[1]]) | !is.list(tl[[1]])) {
      if (!is.null(naming)) {
        cqd[[i]] <- cbind(naming, ldply(tl))
      } else {
        cqd[[i]] <- ldply(tl)
      }
    } else {
      cqd[[i]] <- llply(tl)
    }
  }
  
  return(cqd)
}
