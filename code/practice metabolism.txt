# Create a new dataframe with NA values replaced by 1
ppr286_01_no_na <- ppr286_01_complete
ppr286_01_no_na[is.na(ppr286_01_no_na)] <- 1

metab(
  data = ppr286_01,
  method = "mle",
  wtr.name = "wtr",
  irr.name = "irr",
  do.obs.name = "do.obs",
  do.sat.name = "do.sat",
  z.mix.name = "z.mix",
  k.gas.name = "k.gas"
)

x <- ppr286_01
x$datetime <- as.POSIXct(x$datetime, tz = "UTC")
x$date <- as.Date(x$datetime)

# Step 1: Identify dates with exactly 144 complete rows
complete_dates <- x %>%
    filter(complete.cases(.)) %>%
    group_by(date) %>%
    summarise(count = n()) %>%
    filter(count == 144) %>%
    pull(date)

filtered_df <- x %>%
    filter(date %in% complete_dates)

# Step 2: Choose one specific date with complete data
specific_dates <- complete_dates[1:91]  # You can change the index to select a different date

# Step 3: Subset the original dataframe for this specific date
some_days_df <- x %>% filter(date %in% specific_dates)

mle.res <- metabb(
  data = ppr286_40,
  method = "mle",
)
mle.res$datetime = ISOdate(mle.res$year, 1, 1) + mle.res$doy*3600*24 - 3600*24
plot(cumsum(NEP) ~ datetime, data = mle.res)

plot(R ~ datetime, data = mle.res)


for (i in 80:120) {
    specific_dates_subset <- complete_dates[20:i]
    some_days_df_subset <- x %>% filter(date %in% specific_dates_subset)
    tryCatch({
        result <- metab(data = some_days_df_subset, method = "mle")
        print(paste("Success with", i, "days"))
    }, error = function(e) {
        print(paste("Error with", i, "days:", e$message))
    })
}

